version: "3.8"

services:

  ###
  # Reverse proxy (Traefik)
  ###
  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443 
    networks:
      public:
      private:
        ipv4_address: 172.16.238.10
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/services/:/services/:ro

  ###
  # Frontend
  ###
  # frontend-node1:
  #   build: ./frontend/Dockerfile.prod
  #   restart: always
  #   container_name: frontend
  #   networks:
  #     private:
  #       ipv4_address: 172.16.238.11

  # frontend-node2:
  #   build: ./frontend/Dockerfile.prod
  #   restart: always
  #   container_name: frontend
  #   networks:
  #     private:
  #       ipv4_address: 172.16.238.12

  frontend-dev:
    image: node:20.4.0-alpine
    container_name: frontend-dev
    restart: always
    working_dir: /nuxt
    volumes:
      - ./frontend:/nuxt
      # - frontend-dev-deps:/nuxt/node_modules
    command: >-
        /bin/sh -c "
          yarn install && 
          yarn dev
        "
    networks:
      public:
    ports:
      - 3000:3000
      - 24678:24678


  ###
  # CouchDB
  ###
  couchdb-main:
    image: couchdb:3.3.1
    restart: always
    container_name: couchdb-main
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SECRET: ${COUCHDB_SECRET}
      NODENAME: 172.16.238.20
      ERL_FLAGS: "-setcookie ${COUCHDB_COOKIE}"
    networks:
      private:
        ipv4_address: 172.16.238.20
    volumes:
      - "couchdb-main-data:/opt/couchdb/data"
      - "couchdb-main-cfg:/opt/couchdb/etc/local.d"

  couchdb-node1:
    image: couchdb:3.3.1
    restart: always
    container_name: couchdb-node1
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SECRET: ${COUCHDB_SECRET}
      NODENAME: 172.16.238.21
      ERL_FLAGS: "-setcookie ${COUCHDB_COOKIE}"
    networks:
      private:
        ipv4_address: 172.16.238.21
    volumes:
      - "couchdb-node1-data:/opt/couchdb/data"
      - "couchdb-node1-cfg:/opt/couchdb/etc/local.d"

  couchdb-node2:
    image: couchdb:3.3.1
    restart: always
    container_name: couchdb-node2
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SECRET: ${COUCHDB_SECRET}
      NODENAME: 172.16.238.22
      ERL_FLAGS: "-setcookie ${COUCHDB_COOKIE}"
    networks:
      private:
        ipv4_address: 172.16.238.22
    volumes:
      - "couchdb-node2-data:/opt/couchdb/data"
      - "couchdb-node2-cfg:/opt/couchdb/etc/local.d"
  
  couchdb-cluster-setup:
    image: gesellix/couchdb-cluster-config
    container_name: couchdb-cluster-setup
    command: >-
          setup
          --delay 10s
          --timeout 60s
          --username ${COUCHDB_USER}
          --password ${COUCHDB_PASSWORD}
          -nodes 172.16.238.20
          -nodes 172.16.238.21
          -nodes 172.16.238.22
    networks:
      private:
        ipv4_address: 172.16.238.29

  couchdb-migrations:
    image: node:20.4.0-alpine
    container_name: couchdb-migrations
    working_dir: /app
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SERVER: http://172.16.238.20:5984
    depends_on:
      - couchdb-main
    volumes:
      - ./migrations:/app
    command: >-
        /bin/sh -c "
          sleep 10 && 
          yarn install && 
          yarn nano:migrate
        "
    networks:
      private:
        ipv4_address: 172.16.238.28

  ###
  # Kafka QUEUE
  # @see https://habr.com/ru/articles/738874/
  # @see https://www.baeldung.com/ops/kafka-docker-setup
  ###
  queue-zookeeper: 
    image: confluentinc/cp-zookeeper:7.4.1
    restart: always
    container_name: queue-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      private:
        ipv4_address: 172.16.238.30

  queue-ui:
    image: provectuslabs/kafka-ui
    restart: always
    container_name: queue-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=queue-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=172.16.238.31:29092,172.16.238.32:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=172.16.238.30:2181
    networks:
      private:
        ipv4_address: 172.16.238.39

  queue-kafka-node1:
    image: confluentinc/cp-kafka:7.4.1
    restart: always
    container_name: queue-kafka-node1
    depends_on:
      - queue-zookeeper
    networks:
      private:
        ipv4_address: 172.16.238.31
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 172.16.238.30:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.238.31:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2

  queue-kafka-node2:
    image: confluentinc/cp-kafka:7.4.1
    restart: always
    container_name: queue-kafka-node2
    depends_on:
      - queue-zookeeper
    networks:
      private:
        ipv4_address: 172.16.238.32
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 172.16.238.30:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.238.32:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  
networks:
  public:
    name: public-combat-otter
  private:
    name: private-combat-otter
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

volumes:
  couchdb-main-data:
  couchdb-main-cfg:
  couchdb-node1-data:
  couchdb-node1-cfg:
  couchdb-node2-data:
  couchdb-node2-cfg:
  frontend-dev-deps: