version: "3.8"

services:

  ###
  # Reverse proxy (Traefik)
  ###
  traefik:
    image: traefik:v3.0
    restart: always
    container_name: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443 
    networks:
      private:
        ipv4_address: 172.16.238.10
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.otter.lt`) || Host(`traefik.internal`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik-traefik.loadbalancer.server.port=888"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=wh7WqsCjxFzWbHyxyphX:$$apr1$$n9w9BhYU$$ptsEwLgqcQemS4G4WYGNx/"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"


  ###
  # CouchDB
  ###
  couchdb-main:
    image: couchdb:3.3.1
    restart: always
    container_name: couchdb-main
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SECRET: ${COUCHDB_SECRET}
      NODENAME: couchdb-main
      ERL_FLAGS: "-setcookie ${COUCHDB_COOKIE}"
    networks:
      private:
        ipv4_address: 172.16.238.20
    volumes:
      - "couchdb-main-data:/opt/couchdb/data"
      - "couchdb-main-cfg:/opt/couchdb/etc/local.d"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.couchdb-main.entrypoints=http"
      - "traefik.http.routers.couchdb-main.rule=Host(`couchdb.otter.lt`) || Host(`couchdb.internal`)"
      - "traefik.http.services.couchdb-main-service.loadbalancer.server.port=5984"

  couchdb-node1:
    image: couchdb:3.3.1
    restart: always
    container_name: couchdb-node1
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SECRET: ${COUCHDB_SECRET}
      NODENAME: couchdb-node1
      ERL_FLAGS: "-setcookie ${COUCHDB_COOKIE}"
    networks:
      private:
        ipv4_address: 172.16.238.21
    volumes:
      - "couchdb-node1-data:/opt/couchdb/data"
      - "couchdb-node1-cfg:/opt/couchdb/etc/local.d"

  couchdb-node2:
    image: couchdb:3.3.1
    restart: always
    container_name: couchdb-node2
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
      COUCHDB_SECRET: ${COUCHDB_SECRET}
      NODENAME: couchdb-node2
      ERL_FLAGS: "-setcookie ${COUCHDB_COOKIE}"
    networks:
      private:
        ipv4_address: 172.16.238.22
    volumes:
      - "couchdb-node2-data:/opt/couchdb/data"
      - "couchdb-node2-cfg:/opt/couchdb/etc/local.d"
  
  couchdb-cluster-setup:
    image: gesellix/couchdb-cluster-config
    container_name: couchdb-cluster-setup
    command: >-
          setup
          --delay 10s
          --timeout 60s
          --username ${COUCHDB_USER}
          --password ${COUCHDB_PASSWORD}
          -nodes 172.16.238.20
          -nodes 172.16.238.21
          -nodes 172.16.238.22
    networks:
      private:
        ipv4_address: 172.16.238.29

  # ###
  # # Kafka QUEUE
  # # @see https://habr.com/ru/articles/738874/
  # # @see https://www.baeldung.com/ops/kafka-docker-setup
  # ###
  # queue-zookeeper: 
  #   image: confluentinc/cp-zookeeper:7.4.1
  #   restart: always
  #   container_name: queue-zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 32181:2181

  # queue-kafka-node1:
  #   image: confluentinc/cp-kafka:7.4.1
  #   restart: always
  #   container_name: queue-kafka-node1
  #   depends_on:
  #     - queue-zookeeper
  #   ports:
  #     - 29092:29092
  #   hostname: queue-kafka-node1
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: queue-zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://queue-kafka-node1:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2

  # queue-kafka-node2:
  #   image: confluentinc/cp-kafka:7.4.1
  #   restart: always
  #   container_name: queue-kafka-node2
  #   depends_on:
  #     - queue-zookeeper
  #   ports:
  #     - 29093:29092
  #   hostname: queue-kafka-node2
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: queue-zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://queue-kafka-node2:29093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  
  # queue-ui:
  #   image: provectuslabs/kafka-ui
  #   restart: always
  #   container_name: queue-ui
  #   ports:
  #     - 8090:8080
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=queue-kafka-node1:29092,queue-kafka-node2:29093
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=queue-zookeeper:2181
  #   links:
  #     - queue-zookeeper
  #     - queue-kafka-node1
  #     - queue-kafka-node2

networks:
  private:
    name: private-combat-otter
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24


volumes:
  couchdb-main-data:
  couchdb-main-cfg:
  couchdb-node1-data:
  couchdb-node1-cfg:
  couchdb-node2-data:
  couchdb-node2-cfg:
